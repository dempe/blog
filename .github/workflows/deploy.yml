name: Build and Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3.8'
          extensions: mbstring, intl, bcmath
          ini-values: |
            post_max_size=256M
            upload_max_filesize=256M

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Ensure SQLite is installed
        run: sudo apt-get install -y sqlite3

      - name: Set up SQLite database
        run: |
          touch db.sqlite
          cp .env.example .env  # Ensures that all necessary environment variables are set for Laravel to run properly.
          php artisan key:generate  # The application key (APP_KEY) is used by Laravel to encrypt session data and other sensitive information. It is an essential part of the application configuration, and Laravel will not function properly without it. The php artisan key:generate command generates a new application key and sets it in the .env file.
          php artisan config:cache  # Cache the configuration to speed up subsequent steps.
        # Set these explicitly to make sure they are correct
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: db.sqlite

      - name: Run Laravel migrations and seeders
        run: |
          php artisan migrate:fresh
          php artisan db:seed

      - name: Start Laravel server
        run: php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Wait for Laravel server to start
        run: sleep 15

      - name: Check server status
        run: curl -I http://127.0.0.1:8000

      - name: Download site using wget
        run: |
          wget -d --directory-prefix=output/ --html-extension --convert-links --recursive --level=10 --page-requisites --timestamping --adjust-extension --no-host-directories http://127.0.0.1:8000 http://127.0.0.1:8000/404

      - name: Post-process downloaded files
        run: |
          for f in $(rg 'href="http' ./output/ | rg -v 'href="https://chrisdempewolf.com' | awk -F ':' '{print $1}' | uniq); do 
            sed -i 's|href="http|target="_blank" rel="noopener noreferrer" href="http|g' $f
          done

          sed -i 's|href="assets/css/style.css"|href="https://chrisdempewolf.com/assets/css/style.css"|g' ./output/404.html
          sed -i 's|href="assets/css/github-dark.min.css"|href="https://chrisdempewolf.com/assets/css/github-dark.min.css"|g' ./output/404.html
          sed -i 's|src="assets/js/highlight.min.js"|src="https://chrisdempewolf.com/assets/js/highlight.min.js"|g' ./output/404.html
          sed -i 's|href="about.html"|href="https://chrisdempewolf.com/about.html"|g' ./output/404.html
          sed -i 's|href="resume.pdf"|href="https://chrisdempewolf.com/resume.pdf"|g' ./output/404.html
          sed -i 's|href="tags/index.html"|href="https://chrisdempewolf.com/tags/index.html"|g' ./output/404.html

      - name: Remove unnecessary files
        run: rm -rf ./output/cdn-cgi/

      - name: Sync CloudFront logs and generate stats
        run: |
          aws s3 sync s3://logs-cloudfront-chrisdempewolf.com cloudfront-logs/
          gunzip -c cloudfront-logs/* | goaccess -o ./output/stats.html --log-format CLOUDFRONT --time-format CLOUDFRONT --date-format CLOUDFRONT

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync ./output s3://chrisdempewolf.com --color on --exclude "*.woff2" --exclude "*.otf" --delete
          aws cloudfront create-invalidation --distribution-id E22OYIS6W2FQMI --paths /*
        shell: bash

